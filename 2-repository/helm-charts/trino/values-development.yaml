image:
  repository: trinodb/trino
  tag: 351
  pullPolicy: IfNotPresent
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000

server:
  workers: 1
  node:
    environment: production
    dataDir: /data/trino
    pluginDir: /usr/lib/trino/plugin
  log:
    trino:
      level: INFO
  config:
    path: /usr/lib/trino/etc
    http:
      port: 8080
    query:
      maxMemory: "3GB"
      maxMemoryPerNode: "1GB"
      maxTotalMemory: "3GB"
      maxTotalMemoryPerNode: "2GB"
  jvm:
    maxHeapSize: "3G"
    gcMethod:
      type: "UseG1GC"
      g1:
        heapRegionSize: "32M"

connectors:
    pinot.properties: |-
     connector.name=pinot
     pinot.controller-urls=pinot-controller.datastore.svc.Cluster.local:9000

    kafka.properties: |-
     connector.name=kafka
     kafka.table-names=src-app-agent-json,src-app-credit-card-json, src-app-users-json
     kafka.nodes=edh-kafka-brokers.ingestion.svc.Cluster.local:9092
     kafka.hide-internal-columns=false

    hive.properties: |-
     connector.name=hive-hadoop2
     hive.metastore.uri=thrift://127.0.0.1:9083
     hive.metastore-timeout=1m
     hive.s3.aws-access-key=YOURACCESSKEY
     hive.s3.aws-secret-key=YOURSECRETKEY
     hive.s3.endpoint=http://127.0.0.1:9000
     hive.s3.path-style-access=true
     hive.s3.ssl.enabled=false

  #  mysql.properties: |-
  #   connector.name=mysql
  #   connection-url=jdbc:mysql://mysqlserver:3306
  #   connection-user=mysqluser
  #   connection-password=mysqlpassword

  # elk.properties: |-
  #   connector.name=elasticsearch
  #   elasticsearch.host=elasticsearchserver
  #   elasticsearch.port=9200
  #   elasticsearch.default-schema-name=default
  #   elasticsearch.security=PASSWORD
  #   elasticsearch.auth.user=elastiuser
  #   elasticsearch.auth.password=elasticpassword
  #   elasticsearch.tls.enabled=true

service:
  type: ClusterIP

resources: {}
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
